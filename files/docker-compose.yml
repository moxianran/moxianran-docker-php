version: '3'
services:


  mysql-db:
      container_name: my_mysql
      build: ./mysql
      ports:
          - "3307:3306"
      volumes:
          - ../data/mysql:/var/lib/mysql:rw
          - ../logs/mysql:/var/lib/mysql-logs:rw
          - ./mysql/conf.d:/etc/mysql/conf.d:ro
      environment:
          MYSQL_ROOT_PASSWORD: 123456
          MYSQL_DATABASE: test123
          MYSQL_USER: test
          MYSQL_PASSWORD: 123456
      restart: always
      networks:
          ying_net:
              ipv4_address: 11.11.11.1
      command: "--character-set-server=utf8"


  redis-db:
      container_name: my_redis
      build: ./redis
      ports:
          - "6379:6379"
      volumes:
          - ../data/redis:/data
          - ./redis/redis.conf:/etc/redis/redis.conf:rw
      restart: always
      networks:
          ying_net:
              ipv4_address: 11.11.11.2
      command: redis-server /etc/redis/redis.conf

      
  php:
      container_name: my_php
      build: ./php
      ports:
          - "9000:9000"
      volumes:
          - ../html/:/data/html/:rw
          - ./php/php.ini:/usr/local/etc/php/php.ini:ro
          - ./php/php-fpm.conf:/usr/local/etc/php-fpm.conf:ro
          #- ../logs/php-fpm:/var/log/php-fpm:rw
      links:
          - mysql-db:mysql-db
          - redis-db:redis-db
      restart: always
      networks:
          ying_net:
              ipv4_address: 11.11.11.3
      command: php-fpm

  nginx:
      container_name: my_nginx
      build: ./nginx
      depends_on:
          - php
      links:
        - php:php
      ports:
          - "80:80"
          - "9002:9002"
          - "9003:9003"
          - "9004:9004"
          - "9005:9005"
          - "9006:9006"
          - "443:443"
      volumes:
          - ../html:/data/html:rw
          - ./nginx/conf.d:/etc/nginx/conf.d:ro
          - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
          - ../logs/nginx:/var/log/nginx
      restart: always
      networks:
          ying_net:
              ipv4_address: 11.11.11.4
      command: nginx -g 'daemon off;' # 关闭守护进程执行



      #  mongo:
      #      container_name: my_mongo
      #      build: ./mongo
      #      ports:
      #          - 27017:27017
      #      volumes:
      #          - ../data/mongo/db:/data/db
      #          - ../data/mongo/dbconfigs:/data/dbconfigs
      #      environment:  # admin账号和密码
      #          MONGO_INITDB_ROOT_USERNAME: admin
      #          MONGO_INITDB_ROOT_PASSWORD: 123456
      #      restart: always

      #  zipkin:
      #      container_name: my_zipkin
      #      image: openzipkin/zipkin:latest
      #      ports:
      #          - 9411:9411
      #      restart: always

networks:
    ying_net:
        driver: bridge
        ipam:
            config:
                - subnet: 11.11.11.0/16







